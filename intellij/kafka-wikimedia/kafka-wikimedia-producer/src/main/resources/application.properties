########################################################################################################################
# 1. Kafka configuration
########################################################################################################################

# Apache Kafka broker (= server), where messages to consumer are coming in
# NOTE: if we have multiple brokers (managed by zookeeper) we list them comma separated
spring.kafka.consumer.bootstrap-servers=kafka1:9092,kafka2:9092,kafka3:9092
#spring.kafka.consumer.bootstrap-servers=localhost:9092

########################################################################################################################
# 2 Producer
########################################################################################################################

# Apache Kafka broker (= server), where messages from producer are coming in
spring.kafka.producer.bootstrap-servers=kafka1:9092,kafka2:9092,kafka3:9092
#spring.kafka.producer.bootstrap-servers=localhost:9092
# Which class should be used to serialize a message key/value?
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
