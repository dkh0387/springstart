version: "3.9" #version of docker-compose
services:
  mysql-service:
    container_name: mysql
    image: mysql:latest
    restart: always
    command:
      --default-authentication-plugin=mysql_native_password
#    `ports` is responsible for exposing container ports to the host machine.
#    Simply put, when running docker-compose on our computer with a 123:456 setting,
#    we will be able to access a containerâ€™s 456 port through localhost:123
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=admin1                    #default password of the MySQL container
      - MYSQL_DATABASE=wikimedia_db
      - MYSQL_USER=springstudent
      - MYSQL_PASSWORD=springstudent
    volumes:
      #- ./data:/var/lib/mysql                         #database data volume (very usefully to backup data locally, if the container is down)
      - ./src/main/db:/docker-entrypoint-initdb.d/:ro #database files called when the container is built and started for the first time
  producer-service:
    container_name: producer
    build:
      context: ./kafka-wikimedia-producer
      dockerfile: producer.Dockerfile
    command:
      --publish 8081:8080
    ports:
      - "8081:8080"
  consumer-service:
    container_name: consumer
    depends_on:
      - mysql-service
    build:
      context: ./kafka-wikimedia-consumer
      dockerfile: consumer.Dockerfile
    command:
      --publish 8082:8080
    ports:
      - "8082:8080"
  adminer-service:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - "9000:8080"
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      - ZOO_ENABLE_PROMETHEUS_METRICS=yes
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - '2181:2181'
  kafka1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka1
    ports:
      - "8097:8097"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:8097,INTERNAL://kafka1:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

  kafka2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka2
    ports:
      - "8098:8098"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:8098,INTERNAL://kafka2:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

  kafka3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka3
    ports:
      - "8099:8099"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:8099,INTERNAL://kafka3:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL